# Environment variables to set for Paperless
# Commented out variables will be replaced with a default within Paperless.
#
# In addition to what you see here, you can also define any values you find in
# paperless.conf.example here.  Values like:
#
# * PAPERLESS_PASSPHRASE
# * PAPERLESS_CONSUMPTION_DIR
# * PAPERLESS_CONSUME_MAIL_HOST
#
# ...are all explained in that file but can be defined here, since the Docker
# installation doesn't make use of paperless.conf.


# Additional languages to install for text recognition.  Note that this is
# different from PAPERLESS_OCR_LANGUAGE (default=eng), which defines the
# default language used when guessing the language from the OCR output.
# PAPERLESS_OCR_LANGUAGES=deu ita

# You can change the default user and group id to a custom one
# USERMAP_UID=1000
# USERMAP_GID=1000
# Environment variables to set for Paperless
# Commented out variables will be replaced with a default within Paperless.
#
# In addition to what you see here, you can also define any values you find in
# paperless.conf.example here.  Values like:
#
# * PAPERLESS_PASSPHRASE
# * PAPERLESS_CONSUMPTION_DIR
# * PAPERLESS_CONSUME_MAIL_HOST
#
# ...are all explained in that file but can be defined here, since the Docker
# installation doesn't make use of paperless.conf.


# Additional languages to install for text recognition.  Note that this is
# different from PAPERLESS_OCR_LANGUAGE (default=eng), which defines the
# default language used when guessing the language from the OCR output.
# PAPERLESS_OCR_LANGUAGES=deu ita

# You can change the default user and group id to a custom one
# USERMAP_UID=1000
# USERMAP_GID=1000

# LDAP options
# Uncomment the following line to enable ldap authetication
#PAPERLESS_USE_LDAP=True

# Baseline configuration
#PAPERLESS_AUTH_LDAP_SERVER_URI=ldap://ldap.example.org
#PAPERLESS_AUTH_LDAP_BIND_DN=cn=admin,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_BIND_PASSWORD=<admin_password>

# Enable debug (default false)
#PAPERLESS_AUTH_LDAP_DEBUG=False

# User search filter. Set ...USER_DN to where your user accounts are stored
# and set ...USER_SEARCH_FILTER to the field which matches the user name
# given on django login
#PAPERLESS_AUTH_LDAP_USER_DN=ou=people,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_USER_SEARCH_FILTER=(uid=%(user)s)

# Group search filter. Same as for users but ...GROUP_TYPE has to match
# the ...GROUP_SEARCH_FILTER. For now only groupofnames is implemented.
#PAPERLESS_AUTH_LDAP_GROUP_DN=ou=groups,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_GROUP_SEARCH_FILTER=(objectClass=groupOfNames)
#PAPERLESS_AUTH_LDAP_GROUP_TYPE=groupOfNames

# Get user account permissions from groups. Since paperless uses the admin
# interface, all users need the superuser (su) permission.
# Only relevant for multi user setup and if paperless stops using the admin
# interface.
#PAPERLESS_AUTH_LDAP_GROUP_DN_ACTIVE=cn=django_active,ou=groups,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_GROUP_DN_STAFF=cn=django_staff,ou=groups,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_GROUP_DN_SU=cn=django_su,ou=groups,dc=example,dc=org

# Use StartTLS (default False)
#PAPERLESS_AUTH_LDAP_START_TLS=False

# Simple access permissions through require and deny groups. All users
# in require have access, all users in deny are not allowed access.
# Only relevant for multi user setup.
#PAPERLESS_AUTH_LDAP_REQUIRE_GROUP=cn=django_required,ou=groups,dc=example,dc=org
#PAPERLESS_AUTH_LDAP_DENY_GROUP=cn=django_deny,ou=groups,dc=example,dc=org

# Cache distinguished names and group memberships for this amount of time
# to reduce LDAP traffic. Default is 0 (do not cache at all).
#PAPERLESS_AUTH_LDAP_CACHE_TIMEOUT=0


